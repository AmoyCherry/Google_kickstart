
import java.util.*;  // Scanner

public class Solution{
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);

        int case_num = in.nextInt();
        for(int i = 0; i < case_num; i ++){
            int length = in.nextInt();  // 数组长度
            int k = in.nextInt();

            int[] A = new int[length];
            for(int j = 0; j < length; j ++){
                A[j] = in.nextInt();
            }
            

            // 输入完毕
            Solution solution = new Solution();
            solution.paltes(length, k, A,i + 1);

        }
        


    }

    public void paltes(int N,int k,int[] A,int case_i){
        int left = 1,right = 0;        // 范围代表最大差值，要找出最小的那一个
        for(int i = 1; i < N; i ++){
            if(A[i] - A[i-1] > right){
                right = A[i] - A[i-1];
            }
        }
        right ++; // 左边界

        while(left < right){
            int mid = (left + right) / 2;
            if(canFinish(A,mid,k)){
                right = mid;
            }else{
                left = mid + 1;
            }
        }

        
        System.out.println("Case #" + case_i + ": " + left);
    }

    public boolean canFinish(int[] A,int max_sub,int k){
        int pre = A[0];
        for(int i = 1; i < A.length; i ++){
            while(A[i] - pre > max_sub){
                pre = pre + max_sub;
                k --;
                if(k < 0) return false;
            }
            pre = A[i];

        }

        return true;
    }
        

}